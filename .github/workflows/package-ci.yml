name: package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  linting:
    name: Flake8 and Mypy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Run Flake8
        run: poetry run flake8 --exclude .poetry/cache .

      - name: Run Mypy
        run: poetry run mypy .

  testing:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry dependencies
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Run Pytest
        run: poetry run pytest .

  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [linting, testing]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 'v0.1.0'

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Build package
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Building Python package."
          poetry build

      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Publish package to GitHub Package Registry."
          poetry config http-basic.pypi __token__ ${{ secrets.GITHUB_TOKEN }}
          poetry publish --repository pypi
