name: package

on: [push]

jobs:
  linting:
    name: Flake8 and Mypy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Run Flake8
        run: poetry run flake8 --exclude .poetry/cache .

  testing:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry dependencies
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Run Pytest
        run: poetry run pytest tests

  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [linting, testing]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config --local cache-dir $PWD/.poetry/cache
          poetry install --no-root

      - name: Set new version
        id: version
        run: |
          NEW_VERSION=$(date +%Y.%m.%d)
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Set version in pyproject.toml
        run: |
          sed -i "s/version = .*/version = \"${NEW_VERSION}\"/g" pyproject.toml

      - name: Build package
        if: github.ref == 'refs/heads/master'
        run: |
          echo "Building Python package."
          poetry build

      - name: Publish package to PyPI
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
